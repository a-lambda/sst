{
  "hash": "02e1be588961f996c8a08600d51b27a3",
  "result": {
    "engine": "knitr",
    "markdown": "# Récupération des données SST\n\n## Chargement de packages nécessaires\n\n-   `httr` pour le téléchargement des fichiers de données\n-   `tidyverse` pour les fonctionnalités offertes par\n    1.  `ggplot2`,\n    2.  `lubridate` pour la gestion du temps,\n    3.  `purrr`, entre autres.\n-   `terra`,\n-   `ncdf4` pour la gestion des fichiers NetCDF,\n-   `stringi` pour la fonction stri_sub\n-   `gt` pour la représentation tabulaire\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibs <- c(\"glue\", \"httr\", \"tidyverse\", \"terra\", \"ncdf4\", \"stringi\", \"gt\")\n\ninstalled_libs <- libs %in% rownames(installed.packages())\nif (any(installed_libs == FALSE)) {\n  install.packages(libs[!installed_libs])\n}\n\ninvisible(lapply(libs, library, character.only = TRUE))\n```\n:::\n\n\n\n\n\n\n## Décompte des fichiers exploitables\n\nLes fichiers de données NectCDF temporaires ont le suffixe \"\\_preliminary\".\\\nLes autres ne possèdent pas ce suffixe.\n\nLe premier fichier NetCDF exploitable date du 1er septembre 1981. En date du `Sys.Date()` nous allons déterminer :\n\n-   la date du dernier fichier finalisé disponible\n-   la date du dernier fichier temporaire disponible\n-   le nombre total de fichiers finalisés\n-   le nombre total de fichiers temporaires\n\n### Détermination de l'url du fichier de données `.nc`\n\n-   en fonction de la date,\n-   et du statut (finalisé ou temporaire)\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nyyyymm <- function(date) {\n  return(gsub(\"-\", \"\", stri_sub(date, 1, 7)))\n}\n\nyyyymmdd <- function(date) { \n  return(gsub(\"-\", \"\", date))\n}\n\nget_url <- function(date, is.preliminary = FALSE) {\n  \n  url_root <- \"https://www.ncei.noaa.gov/data/sea-surface-temperature-optimum-interpolation/v2.1/access/avhrr\"\n  url_folder <- paste(url_root, yyyymm(date), sep = \"/\")\n  file_prefix <- \"oisst-avhrr-v02r01.\"\n  file_suffix <- if_else(is.preliminary, \"_preliminary.nc\", \".nc\")\n  url_file <- paste0(file_prefix, yyyymmdd(date), file_suffix)\n  return(paste(url_folder, url_file, sep = '/'))\n  \n}\n\nget_all_url <- function(start_date, end_date, is.preliminary = FALSE) {\n  \n  seq_days <- seq(start_date, end_date, by = \"days\")\n  all_url <- sapply(seq_days, get_url, is.preliminary = is.preliminary)\n  return(all_url)\n  \n}\n```\n:::\n\n\n\n\n\n\n### Datation des derniers fichiers (**temporaire** et **finalisé**)\n\nPrincipe :\n\nOn recherche à partir de la date du jour la présence des données aux urls que l'on aura calculées par ailleurs avec la fonction `get_url`. Si la page sollicitée est présente on a fini.\n\nSinon on passe au jour précédent, et ainsi de suite si nécessaire, jusqu'à tomber sur un code réponse http de valeur 200.\n\n::: callout-note\nLes données collectées qualifiées de **temporaires** sont enregistrées dans un fichier avec l'extension `_preliminary.nc` le temps que les données soient **vérifiées et validées**.\n\nCette opération se déroule sur un délai d'approximativement 2 semaines à partir de la date de collecte des données.\n:::\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nget_latest_date <- function(init_date, increment = -1, is.preliminary) {\n  \n  date <- init_date\n  http_200_status_OK <- FALSE\n  while (!http_200_status_OK) {\n    url <- get_url(date = date, is.preliminary = is.preliminary)\n    http_status_code <- status_code(GET(url))\n    if (http_status_code == 404) { \n      date <- date + increment\n    } else {\n      if (http_status_code == 200) { \n        http_200_status_OK <- TRUE \n      }\n    }\n  }\n  return(date)\n}\n\nlatest_preliminary_date <- get_latest_date(\n  init_date = Sys.Date(),\n  is.preliminary = TRUE\n)\n\nlatest_finalized_date <- get_latest_date(\n  init_date = Sys.Date() - 14,\n  is.preliminary = FALSE\n)\n```\n:::\n\n\n\n\n\n\n::: callout-note\nSi des fichiers `preliminary` se retrouvent encore parmi des fichiers finalisés, parce qu'ils n'auront pas encore été traités, alors les décomptes de fichiers finalisés et temporaires seront inexacts.\n:::\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ndata_files_count <- function(start_date, end_date) {\n  \n  lubridate::interval(start_date, end_date) %/% days(1) + 1\n\n}\n\nnc_files_count <- data_files_count(ymd(\"1981-09-01\"), latest_finalized_date)\npreliminary_files_count <- data_files_count(ymd(\"1981-09-01\"), latest_preliminary_date)\n\ntib_summary <- tibble(\n  file_extension = c(\".nc\", \"_preliminary.nc\"),\n  file_type = c(\"Finalisé\", \"Temporaire\"),\n  latest_date = c(latest_finalized_date, latest_preliminary_date),\n  file_count  = c(nc_files_count, preliminary_files_count)\n)\n\ngt_summary <- gt(tib_summary) |> \n  tab_header(\n    title = md(\"**Informations relatives aux fichiers de données**\"),\n    subtitle = md(\"(Valeurs théoriques)\")\n  ) |> \n  tab_footnote(\n    footnote = md(\"Première collecte quotidienne datée du **01/09/1981**\"),\n    locations = cells_body(\n      columns = file_count, rows = all()\n    )\n  ) |> \n  tab_footnote(\n    footnote = md(\"Dates **estimées** selon le protocole de traitement des données\"),\n    locations = cells_body(\n      columns = latest_date, rows = all()\n    )\n  )\n\ngt_summary\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"yvftmeovak\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#yvftmeovak table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#yvftmeovak thead, #yvftmeovak tbody, #yvftmeovak tfoot, #yvftmeovak tr, #yvftmeovak td, #yvftmeovak th {\n  border-style: none;\n}\n\n#yvftmeovak p {\n  margin: 0;\n  padding: 0;\n}\n\n#yvftmeovak .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#yvftmeovak .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#yvftmeovak .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#yvftmeovak .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#yvftmeovak .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yvftmeovak .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yvftmeovak .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yvftmeovak .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#yvftmeovak .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#yvftmeovak .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#yvftmeovak .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#yvftmeovak .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#yvftmeovak .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#yvftmeovak .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#yvftmeovak .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#yvftmeovak .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#yvftmeovak .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#yvftmeovak .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#yvftmeovak .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yvftmeovak .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#yvftmeovak .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#yvftmeovak .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#yvftmeovak .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yvftmeovak .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#yvftmeovak .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#yvftmeovak .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yvftmeovak .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yvftmeovak .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#yvftmeovak .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yvftmeovak .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#yvftmeovak .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yvftmeovak .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yvftmeovak .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yvftmeovak .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yvftmeovak .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yvftmeovak .gt_left {\n  text-align: left;\n}\n\n#yvftmeovak .gt_center {\n  text-align: center;\n}\n\n#yvftmeovak .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#yvftmeovak .gt_font_normal {\n  font-weight: normal;\n}\n\n#yvftmeovak .gt_font_bold {\n  font-weight: bold;\n}\n\n#yvftmeovak .gt_font_italic {\n  font-style: italic;\n}\n\n#yvftmeovak .gt_super {\n  font-size: 65%;\n}\n\n#yvftmeovak .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#yvftmeovak .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#yvftmeovak .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#yvftmeovak .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#yvftmeovak .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#yvftmeovak .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#yvftmeovak .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#yvftmeovak .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#yvftmeovak div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"4\" class=\"gt_heading gt_title gt_font_normal\" style><span data-qmd-base64=\"KipJbmZvcm1hdGlvbnMgcmVsYXRpdmVzIGF1eCBmaWNoaWVycyBkZSBkb25uw6llcyoq\"><span class='gt_from_md'><strong>Informations relatives aux fichiers de données</strong></span></span></td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"4\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style><span data-qmd-base64=\"KFZhbGV1cnMgdGjDqW9yaXF1ZXMp\"><span class='gt_from_md'>(Valeurs théoriques)</span></span></td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"file_extension\">file_extension</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"file_type\">file_type</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"latest_date\">latest_date</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"file_count\">file_count</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"file_extension\" class=\"gt_row gt_left\">.nc</td>\n<td headers=\"file_type\" class=\"gt_row gt_left\">Finalisé</td>\n<td headers=\"latest_date\" class=\"gt_row gt_right\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> 2025-06-18</td>\n<td headers=\"file_count\" class=\"gt_row gt_right\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span> 15997</td></tr>\n    <tr><td headers=\"file_extension\" class=\"gt_row gt_left\">_preliminary.nc</td>\n<td headers=\"file_type\" class=\"gt_row gt_left\">Temporaire</td>\n<td headers=\"latest_date\" class=\"gt_row gt_right\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> 2025-07-02</td>\n<td headers=\"file_count\" class=\"gt_row gt_right\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span> 16011</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> <span data-qmd-base64=\"RGF0ZXMgKiplc3RpbcOpZXMqKiBzZWxvbiBsZSBwcm90b2NvbGUgZGUgdHJhaXRlbWVudCBkZXMgZG9ubsOpZXM=\"><span class='gt_from_md'>Dates <strong>estimées</strong> selon le protocole de traitement des données</span></span></td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span> <span data-qmd-base64=\"UHJlbWnDqHJlIGNvbGxlY3RlIHF1b3RpZGllbm5lIGRhdMOpZSBkdSAqKjAxLzA5LzE5ODEqKg==\"><span class='gt_from_md'>Première collecte quotidienne datée du <strong>01/09/1981</strong></span></span></td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\n\n\n## Comptabilisation des fichiers de données\n\n### Comptabilisation **théorique** dans le tibble `tib_expected`\n\nLe tibble `tib_expected` contient les informations relatives à l'ensemble des données théoriquement entreposées sur le serveur (basées sur le protocole de production et de nommage des données)\n\n-   date : date de production du fichier (temporaire ou finalisé)\\\n-   data_url : url du fichier de données\n-   data_filename : nom du fichier de données\n\nIl contient en plus une information permettant de savoir si le fichier a dèjà été téléchargé.\n\n-   data_loaded : champ de type logique indiquant la présence des données du fichier en local dans le dossier `DATA/RAW`\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntib_expected <- tibble(\n  date = seq(ymd(\"1981-09-01\"), latest_preliminary_date, by = \"days\")\n)\n\nurl_finalized_data <- get_all_url(\n  start_date = ymd(\"1981-09-01\"),\n  end_date = latest_finalized_date,\n  is.preliminary = FALSE\n)\n  \nurl_preliminary_data <- get_all_url(\n  start_date = latest_finalized_date + 1,\n  end_date = latest_preliminary_date,\n  is.preliminary = TRUE\n)\n\ntib_expected$data_url <- c(url_finalized_data, url_preliminary_data)\n\ntib_expected$data_filename <- tib_expected$data_url |>\n  map(\\(x) {tail(stri_split_fixed(x, \"/\")[[1]], n = 1)}) |> \n  unlist()\n\n\ndata_files <- tib_expected$data_filename\ndata_files_loaded <- list.files(path = \"DATA/RAW\", pattern = \"*.nc*\")\ndata_preliminary_loaded <- list.files(\n  path = \"DATA/RAW\", pattern = \"*_preliminary.nc*\"\n)\ntib_expected$data_loaded <- (data_files %in% data_files_loaded)\n```\n:::\n\n\n\n\n\n\n### Suppression des fichiers devenus inutiles\n\nCela concerne principalement les fichiers **temporaires** qui sont encore présents dans le dossier `DATA/RAW` alors qu'ils ont été supprimés sur le serveur.\n\nC'est la variable `latest_finalized_date` contenant la date du fichier finalisé le plus récent qui permet cette discrimination.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ndata_files_to_delete <- data_files_loaded[!(data_files_loaded %in% data_files)]\nif (length(data_files_to_delete > 0)) {\n  unlink(paste(\"DATA/RAW\", data_files_to_delete, sep = \"/\"))\n}\n```\n:::\n\n\n\n\n\n\n### Téléchargement des données SST \n\n- critère de sélection : `data_loaded == FALSE`\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nget_unloaded_data <- function(data_filename, data_url) {\n  \n  file_path <- paste(\"DATA/RAW\" , data_filename, sep = \"/\")\n  status_code <- status_code(GET(data_url))\n  message(status_code)\n  if (status_code == 200) {\n    res <- httr::GET(data_url,\n                     write_disk(file_path, overwrite = TRUE) #,\n                     # progress()\n                    )\n  } else {\n    message(glue(\"The data for file {data_filename} are inaccessible\"))\n  }\n  \n}\n\ndata_files_unloaded <- tib_expected |> \n  dplyr::filter(!data_loaded)\ndata_filenames <- data_files_unloaded$data_filename\ndata_urls <- data_files_unloaded$data_url\npwalk(list(data_filenames, data_urls), get_unloaded_data)\n```\n:::\n\n\n\n\n\n\n### Comptabilisation **réelle** dans le tibble `tib_sst`\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntib_sst <- tib_expected\ndata_files <- tib_sst$data_filename\ndata_files_loaded <- list.files(path = \"DATA/RAW\", pattern = \"*.nc*\")\ntib_sst$data_loaded <- (data_files %in% data_files_loaded)\n\nsaveRDS(tib_sst, \"DATA/tib_sst.RDS\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}